name: Release

on:
  push:
    tags: "*"
  workflow_dispatch:

jobs:
  build:
    uses: ./.github/workflows/verify.yml

  make_release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --prune --unshallow --tags

      - run: mkdir .staging

      # Shamelessly stolen from Knights_of_Ludd's github pipeline
      - name: Setup release information
        run: |
          echo "MOD_VERSION=$(git describe --tags)" >> $GITHUB_ENV
          git log --format=%B -n 1 $(git log -1 --pretty=format:"%h") | cat - > .staging/changes
          if [[ "$(git describe --tags)" =~ .*"dev"|"qa"|"unstable".* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV;
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV;
          fi

      - name: Get JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: JAR
          path: jars

      - name: Staging
        run: bash .github/scripts/stage-release.sh . .staging/vppps

      - name: Generate mod_info.json
        run: python .github/scripts/create_mod_info.py ./mod_info.json .staging/vppps/mod_info.json

      - name: Zip
        run: cd .staging && zip -r vppps.zip vppps

      - name: Publish
        uses: ncipollo/release-action@v1.16.0
        with:
          tag: ${{ env.MOD_VERSION }}
          bodyFile: .staging/changes
          draft: true # That so we can review the update one last time prior to releasing it for real
          prerelease: "${{ env.IS_PRERELEASE }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: .staging/vppps.zip
